{"mappings":"AAEe,SAAAA,EAA2BC,EAAa,GAGrD,OAAOC,MAFK,4FAAmCD,KAE7BE,MAAKC,GAAYA,EAASC,Q,CCF9C,MAAMC,EAAgBC,SAASC,cAAc,eAC7C,IAAIC,EAAoB,EAET,SAAAC,EAAoBC,EAAaC,GAC9C,IAAIC,EAAS,GAKbJ,EAAoBE,EAEhBA,EAAc,IAChBE,GAAU,mBACVA,GAAU,cAERF,EAAc,IAChBE,GAAU,gBAERF,EAAc,IAChBE,GAAU,OAdQF,EAAc,UAgB9BA,EAAc,IAChBE,GAAU,OAhBKF,EAAc,UAkB/BE,GAAU,aAAaF,gBAEnBC,EAAW,EAAID,IACjBE,GAAU,OApBIF,EAAc,UAsB1BC,EAAW,EAAID,IACjBE,GAAU,OAtBOF,EAAc,UAwB7BC,EAAW,EAAID,IACjBE,GAAU,iBAGRD,EAAWD,GAAeC,EAAWD,KACvCE,GAAU,OAAOD,EAAW,WAC5BC,GAAU,oBAEZP,EAAcQ,UAAYD,C,CAG5BP,EAAcS,iBAAiB,SAE/B,SAA2BC,GACzB,GAA4B,OAAxBA,EAAIC,OAAOC,SACb,OAEF,GAA+B,QAA3BF,EAAIC,OAAOE,YACb,OAEF,GAA+B,MAA3BH,EAAIC,OAAOE,YAKb,YAJAnB,EAAWS,GAAqB,GAAIN,MAAKiB,IACvCC,EAAaD,EAAKE,SAClBZ,EAAWU,EAAKG,KAAMH,EAAKI,YAAY,IAI3C,GAA+B,MAA3BR,EAAIC,OAAOE,YAKb,YAJAnB,EAAWS,GAAqB,GAAIN,MAAKiB,IACvCC,EAAaD,EAAKE,SAClBZ,EAAWU,EAAKG,KAAMH,EAAKI,YAAY,IAK3CxB,EADagB,EAAIC,OAAOE,aACRhB,MAAKiB,IACnBC,EAAaD,EAAKE,SAClBZ,EAAWU,EAAKG,KAAMH,EAAKI,YAAY,G,ICrE3C,MAAMC,EAAOlB,SAASC,cAAc,UAE7B,SAASa,EAAaK,GAC3B,MAAMb,EAASa,EAAIC,QACjB,CAACC,GAAKC,MAAEA,EAAKC,aAAEA,EAAYC,YAAEA,KACvBH,EAAM,8BAA8BC,oEAAwEE,iBAClGD,eAChB,IAEFL,EAAKX,UAAYD,C,CAGnBb,IAAoBG,MAAKiB,IACvBY,QAAQC,IAAIb,GACZC,EAAaD,EAAKE,SAClBZ,EAAWU,EAAKG,KAAMH,EAAKI,YAAY","sources":["src/js/fetchLord.js","src/js/pagination.js","src/index.js"],"sourcesContent":["const BASE_URL = `https://api.themoviedb.org/3/movie/popular`;\nconst KEY = `002008aca7b79d6606168d582d26d735`;\nexport default function searchVCharacters(pageNumber = 1) {\n  const URL = `${BASE_URL}?api_key=${KEY}&page=${pageNumber}`;\n \n  return fetch(URL).then(response => response.json());\n}\n\n\n","import fetchLord from './fetchLord';\nimport { createMarkup } from '../index';\n\nconst paginationBox = document.querySelector('.pagination');\nlet globalCurrentPage = 0;\n\nexport default function pagination(currentPage, allPages) {\n  let markup = '';\n  let beforeTwoPage = currentPage - 2;\n  let beforePage = currentPage - 1;\n  let afterPage = currentPage + 1;\n  let afterTwoPage = currentPage + 2;\n  globalCurrentPage = currentPage;\n\n  if (currentPage > 1) {\n    markup += `<li>&#8592;</li>`;\n    markup += `<li>1</li>`;\n  }\n  if (currentPage > 4) {\n    markup += `<li>...</li>`;\n  }\n  if (currentPage > 3) {\n    markup += `<li>${beforeTwoPage}</li>`;\n  }\n  if (currentPage > 2) {\n    markup += `<li>${beforePage}</li>`;\n  }\n  markup += `<li><span>${currentPage}</span></li>`;\n\n  if (allPages - 1 > currentPage) {\n    markup += `<li>${afterPage}</li>`;\n  }\n  if (allPages - 2 > currentPage) {\n    markup += `<li>${afterTwoPage}</li>`;\n  }\n  if (allPages - 3 > currentPage) {\n    markup += `<li>...</li>`;\n  }\n  \n  if (allPages > currentPage || allPages < currentPage) {\n    markup += `<li>${allPages = 500}</li>`;\n    markup += `<li>&#8594;</li>`;\n  }\n  paginationBox.innerHTML = markup;\n}\n\npaginationBox.addEventListener('click', handlrePagination);\n\nfunction handlrePagination(evt) {\n  if (evt.target.nodeName !== 'LI') {\n    return;\n  }\n  if (evt.target.textContent === '...') {\n    return;\n  }\n  if (evt.target.textContent === '←') {\n    fetchLord((globalCurrentPage -= 1)).then(data => {\n      createMarkup(data.results);\n      pagination(data.page, data.total_pages);\n    });\n    return;\n  }\n  if (evt.target.textContent === '→') {\n    fetchLord((globalCurrentPage += 1)).then(data => {\n      createMarkup(data.results);\n      pagination(data.page, data.total_pages);\n    });\n    return;\n  }\n  const page = evt.target.textContent;\n  fetchLord(page).then(data => {\n    createMarkup(data.results);\n    pagination(data.page, data.total_pages);\n  });\n}\n","import pagination from './js/pagination';\nimport searchVCharacters from './js/fetchLord';\n\nconst list = document.querySelector('.cards');\n\nexport function createMarkup(arr) {\n  const markup = arr.reduce(\n    (acc, { title, vote_average, poster_path\n    }) => acc + `<li class=\"cards-item\"><h2>${title}</h2><img class='movieImag' src=\"https://image.tmdb.org/t/p/w500${poster_path\n    }\" alt=\"\"><h3>${vote_average}</h3></li>`,\n    ''\n  );\n  list.innerHTML = markup;\n}\n\nsearchVCharacters().then(data => {\n  console.log(data);\n  createMarkup(data.results);\n  pagination(data.page, data.total_pages);\n});\n"],"names":["$cd5aaecc55d1d1f5$export$2e2bcd8739ae039","pageNumber","fetch","then","response","json","$1bab9c519cfa82bc$var$paginationBox","document","querySelector","$1bab9c519cfa82bc$var$globalCurrentPage","$1bab9c519cfa82bc$export$2e2bcd8739ae039","currentPage","allPages","markup","innerHTML","addEventListener","evt","target","nodeName","textContent","data","$1f0dc3b9307be026$export$24783e9f3a24abe4","results","page","total_pages","$1f0dc3b9307be026$var$list","arr","reduce","acc","title","vote_average","poster_path","console","log"],"version":3,"file":"index.4146e460.js.map"}